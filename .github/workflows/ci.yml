name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-sanity:
    name: "Build Go"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Go code sanity check
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@main
        with:
          golangci-lint-configfile: ".golangci.yaml"
          working-directory: "./packages/backend"
      - name: Build Go
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@main
        with:
          golangci-lint-configfile: ".golangci.yaml"
          working-directory: "./packages/backend"
        run: |
          set -exu
          sudo apt update
          sudo apt install -y protobuf-compiler golang-google-protobuf-dev
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          export GOPATH=$HOME/go
          export PATH=$PATH:$GOPATH/bin
          basedir="$(pwd)/packages"
          cd "$basedir/proto"
          protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative     ./dsc.proto
          cd "$basedir/backend"
          go build .
  build-sanity:
    name: "Build Go"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Go
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@main
        with:
          golangci-lint-configfile: ".golangci.yaml"
          working-directory: "./packages/backend"
        run: |
          set -exu
          sudo apt update
          sudo apt install -y protobuf-compiler golang-google-protobuf-dev
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          export GOPATH=$HOME/go
          export PATH=$PATH:$GOPATH/bin
          basedir="$(pwd)/packages"
          cd "$basedir/proto"
          protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative     ./dsc.proto
          cd "$basedir/backend"
          go build .
